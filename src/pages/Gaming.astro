---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Button from "@/components/Button.astro";
import GridCards from "@/components/GridCards.astro";
import CongratulationsMessage from "@/components/CongratulationsMessage.astro";
---

<!-- HTML -->
<BaseLayout title="Memory | Game" description="Página donde se juega con el nivel seleccionado y la cantidad de cartas seleccionadas hasta encontrar todas las coincidencias">
        <section class="section__button">

            <Button className="restart__button" content="Reiniciar" id="button-reiniciar"/>
            <Button  className="select__button" content="Elegir Nivel" id="button-nivel"/>

        </section>

        <GridCards />

        <CongratulationsMessage />
</BaseLayout>



<!--- CSS -->
<style>

    .section__button {
        width: 100%;
        margin: 5rem 0 0 0;
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10rem;
    }

    .active {
        transform: translateY(180deg);
    }

</style>



<!-- JAVASCRIPT -->
<script>

    import confetti from 'canvas-confetti';
    const restartButton = document.querySelector('#button-reiniciar');
    const selectButton = document.querySelector('#button-nivel');
    const gridCards = document.querySelector('.main__cards-selection');
    const congratulationsMessage = document.querySelector('#congratulationsMessage');
    const congratulationsSound = new Audio('./sounds/Congratulations.mp3');
    const backgroundSound = new Audio('./sounds/backgroundSoundGame.mp3');
    const correctSound = new Audio('./sounds/correct.mp3'); 
    const flipSound = new Audio('./sounds/Flipcard.mp3');
    const buttonMusic = document.querySelector('#music');


    // Array de imágenes
    const images = [
        './Angular.webp',
        './Astro.webp',
        './Bootstrap.webp',
        './CSS.webp',
        './Git.webp',
        './HTML.webp',
        './Java.webp',
        './JavaScript.webp',
        './MongoDB.webp',
        './Mysql.webp',
        './Nextjs.webp',
        './Nodejs.webp',
        './PHP.webp',
        './Postgre.webp',
        './React.webp',
        './Sqlite.webp',
        './Tailwind.webp',
        './VSCode.webp',
        './Vue.webp'
    ];



    // Obtener cantidad de imágenes en las cards
    const cardsNumber = parseInt(localStorage.getItem('cantidadCartas')); 

    let selectedCards = [];
    let currentMove = 0;
    let pairsfound = 0;


    // Activación de una card
    const activate = (e) => {
        if(currentMove < 2){
            const card = e.target.closest('.container__card'); 
            flipSound.play();

            if (!selectedCards[0] || selectedCards[0] !== card) {
                selectedCards.push(card);

                if(++currentMove == 2){
                    if(selectedCards[0].querySelectorAll('.card__face')[0].style.backgroundImage == selectedCards[1].querySelectorAll('.card__face')[0].style.backgroundImage){
                        selectedCards = [];
                        currentMove = 0;
                        pairsfound++;
                        correctAudio();
                        if (pairsfound === cardsNumber / 2) {
                            showCongratulationsMessage();
                            showConfetti();
                        };
                    }else {
                        setTimeout(()=> {
                            selectedCards[0].style.transform = 'rotateY(0deg)';
                            selectedCards[1].style.transform = 'rotateY(0deg)';
                            selectedCards = [];
                            currentMove = 0;
                        },600);
                    }
                }
            }
        }
    };


    // Generar parejas
    const generateUniquePairs = (numPairs) => { 
        const values = []; 
        for (let i = 0; i < numPairs; i++) { 
            values.push(i, i);  
        } 
        return values.sort(() => Math.random() - 0.5); 
    }; 


    // Crear cartas
    const createCards = () => {
        gridCards.innerHTML = '';

        const valuesUsed = generateUniquePairs(cardsNumber / 2);
        pairsfound = 0;
        congratulationsMessage.classList.remove('congratulations__message-show');


        for (let i = 0; i < cardsNumber; i++) {
            
            // Contenedor de las cards
            const containerCard = document.createElement('div');
            containerCard.classList.add('container__card');
            containerCard.style.width = '20rem';
            containerCard.style.height = '25rem';
            containerCard.style.padding = '1rem';
            containerCard.style.borderRadius = '10px';
            containerCard.style.border = '1px solid #283C56';
            containerCard.style.position = 'relative';
            containerCard.style.transition = 'transform 0.5s';
            containerCard.style.transformStyle = 'preserve-3d';
            containerCard.style.display = 'flex';
            containerCard.style.justifyContent = 'center';
            containerCard.style.alignItems = 'center';
            containerCard.style.cursor = 'pointer';

            containerCard.addEventListener('click', () => {
                containerCard.style.transform = 'rotateY(180deg)';
            });

            containerCard.addEventListener('mouseover', () => {
                containerCard.style.boxShadow = '0px 0px 12px rgba(0, 0, 0, 0.8)';
            });

            containerCard.addEventListener('mouseout', () => {
                containerCard.style.boxShadow = 'none';
            });
            


            // Front de las cards
            const cardFace = document.createElement('div');
            cardFace.classList.add('card__face');
            cardFace.style.width = '85%';
            cardFace.style.height = '100%';
            cardFace.style.borderRadius = '8px';
            cardFace.style.display = 'flex';
            cardFace.style.justifyContent = 'center';
            cardFace.style.alignItems = 'center';
            cardFace.style.position =  'absolute';
            cardFace.style.backfaceVisibility = 'hidden';
            cardFace.style.pointerEvents = 'none';
            cardFace.style.transform = 'rotateY(180deg)';
            cardFace.style.backgroundImage = `url(${images[valuesUsed[i]]})`;
            cardFace.style.backgroundPosition = 'center';
            cardFace.style.backgroundSize = 'contain';
            cardFace.style.backgroundRepeat = 'no-Repeat';




            // Back de las cards
            const cardBack = document.createElement('div');
            cardBack.classList.add('card__back');
            cardBack.style.width = '100%';
            cardBack.style.height = '100%';
            cardBack.style.border = '1px solid #283C56';
            cardBack.style.borderRadius = '8px';
            cardBack.style.display = 'flex';
            cardBack.style.justifyContent = 'center';
            cardBack.style.alignItems = 'center';
            cardBack.style.position =  'absolute';
            cardBack.style.backfaceVisibility = 'hidden';
            cardBack.style.pointerEvents = 'none';
            cardBack.style.border = '2px solid #003366';
            cardBack.style.background = '#283C56';
            cardBack.style.fontFamily = 'Exo 2';
            cardBack.style.fontSize = '2.8rem';
            cardBack.style.fontWeight = '600';
            cardBack.textContent = 'Memory';
            cardBack.style.color = 'var(--color-white)';


            containerCard.appendChild(cardFace);
            containerCard.appendChild(cardBack);
            gridCards.appendChild(containerCard);


            
            containerCard.addEventListener('click', activate);
        };
    }

    // Mensaje de felicitaciones    
    const showCongratulationsMessage = () => {
        setTimeout(() => {
            congratulationsMessage.classList.add('congratulations__message-show');
            gridCards.innerHTML = '';
            congratulationsSound.play();
        }, 600)
    };

    // Generar confetti 
    const showConfetti = () => {
        setTimeout(() => {
            confetti({
                particleCount: 200,
                spread: 80,
                origin: { y: 0.5 }
            });
        }, 600);
    };

    createCards();



    // Reiniciar cartas con button
    restartButton.addEventListener('click', () => {
        selectedCards = [];
        currentMove = 0;
        createCards();
    });




    // BUTTONS
    // Botón de niveles
    selectButton.addEventListener('click', () => {
        window.location.href = '/index';
    });

    selectButton.setAttribute('data-content', 'Seleccionar');


    // Botón de reiniciar
    restartButton.setAttribute('data-content', 'Comenzar');
        

    

    
    // SONIDOS
        let isActive = false;

        buttonMusic.addEventListener('mouseover', () => {
            if(!isActive){
                buttonMusic.setAttribute('data-content', 'Activar');

            }else {
                buttonMusic.setAttribute('data-content', 'Desactivar');
            };
        });  
        
        buttonMusic.addEventListener('click', () => {
            if (isActive = !isActive) {
                buttonMusic.setAttribute('data-content', 'Activar');
                
                playSound();
            }else {
                buttonMusic.setAttribute('data-content', 'Desactivar');

                pauseSound();
            };
        });

        const playSound = () => {
            backgroundSound.play();
            backgroundSound.volume = 0.2;
            backgroundSound.addEventListener('ended', () => {
                backgroundSound.currentTime = 0;
                backgroundSound.play();
            })
        }

        const pauseSound = () => {
            backgroundSound.pause();
        };


         // Sonido de parejas
        const correctAudio = () => {
            correctSound.play();
        };
</script>